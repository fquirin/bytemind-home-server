#  ಠ_ಠ
# HTTP server 1
server {
	listen 80 default_server;
	listen [::]:80 default_server;
	server_name [example.com];

	#OPTION A:
	root /var/www;
	index index.html index.htm index.php;

	location / {
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		try_files $uri $uri/ =404;
	}
	#error_page 404 /404.html;

	#OPTION B:
	#use this to redirect to HTTPS
	#return 301 https://$server_name$request_uri;
}

# HTTPS server 1
server {
	# port to listen to
	listen 443 ssl http2 default_server;
	listen [::]:443 ssl http2 default_server;
	# domain to listen to
	server_name [example.com];

	root /var/www;
	index index.html index.htm index.php;

	location / {
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		try_files $uri $uri/ =404;
	}
	#error_page 404 /404.html;

	location /api/1/ {
		proxy_pass http://localhost:9001/;
	}

	location /api/2/ {
		proxy_pass http://localhost:9002/;
	}
	
	location /websockets/ {
		proxy_pass http://localhost:9003/;
		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection $connection_upgrade;
		proxy_read_timeout 14400;
	}
	
	location ~ /templates\/(.*)\.(jpg|jpeg|png|gif|ico|css|js|woff|woff2)$ {
		expires 7d;
	}
	
	#gzip on;
	#gzip_disable "msie6";

	#gzip_vary on;
	#gzip_proxied any;
	#gzip_comp_level 6;
	#gzip_buffers 16 8k;
	#gzip_http_version 1.1;
	#gzip_types text/plain text/css application/json application/javascript application/x-javascript text/xml application/xml application/xml+rss text/javascript;

	#ssl on;

	#ssl_certificate /etc/letsencrypt/live/[example.com]/fullchain.pem;
	#ssl_certificate_key /etc/letsencrypt/live/[example.com]/privkey.pem;
	#ssl_trusted_certificate /etc/letsencrypt/live/[example.com]/chain.pem;

	ssl_session_timeout 5m;

	ssl_protocols TLSv1 TLSv1.1 TLSv1.2; #SSLv3 (POODLE vulnerability)
	ssl_ciphers "HIGH:!aNULL:!MD5 or HIGH:!aNULL:!MD5:!3DES";
	ssl_prefer_server_ciphers on;
}